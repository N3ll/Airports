// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ABS_v2.DataAccess.Configuration
{
    using ABS_v2.DataAccess.Entities;

    // FlightSection
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class FlightSectionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FlightSection>
    {
        public FlightSectionConfiguration()
            : this("dbo")
        {
        }

        public FlightSectionConfiguration(string schema)
        {
            ToTable("FlightSection", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SectionClassId).HasColumnName(@"SectionClassId").HasColumnType("int").IsRequired();
            Property(x => x.FlightId).HasColumnName(@"FlightId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Flight).WithMany(b => b.FlightSections).HasForeignKey(c => c.FlightId).WillCascadeOnDelete(false); // FK_Flight_FlightSection
            HasRequired(a => a.SectionClass).WithMany(b => b.FlightSections).HasForeignKey(c => c.SectionClassId).WillCascadeOnDelete(false); // FK_SectionClass_FlightSection
        }
    }

}
// </auto-generated>
