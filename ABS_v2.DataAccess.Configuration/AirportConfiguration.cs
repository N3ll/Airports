// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ABS_v2.DataAccess.Configuration
{
    using ABS_v2.DataAccess.Entities;

    // Airport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class AirportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Airport>
    {
        public AirportConfiguration()
            : this("dbo")
        {
        }

        public AirportConfiguration(string schema)
        {
            ToTable("Airport", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(3);
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("decimal").IsRequired().HasPrecision(10,6);
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("decimal").IsRequired().HasPrecision(10,6);
            HasMany(t => t.Filters).WithMany(t => t.Airports).Map(m =>
            {
                m.ToTable("AirportFilter", "dbo");
                m.MapLeftKey("AirportId");
                m.MapRightKey("FilterId");
            });
        }
    }

}
// </auto-generated>
