// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ABS_v2.DataAccess.Entities
{

    // Airport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Airport
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 3)
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude

        // Reverse navigation

        /// <summary>
        /// Child Filters (Many-to-Many) mapped by table [AirportFilter]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Filter> Filters { get; set; } // Many to many mapping
        /// <summary>
        /// Child Flights where [Flight].[DestinationAirportId] point to this entity (FK_DestinationAirport_Flight)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Flight> DestinationAirport { get; set; } // Flight.FK_DestinationAirport_Flight
        /// <summary>
        /// Child Flights where [Flight].[OriginAirportId] point to this entity (FK_OriginAirport_Flight)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Flight> OriginAirport { get; set; } // Flight.FK_OriginAirport_Flight

        public Airport()
        {
            DestinationAirport = new System.Collections.Generic.List<Flight>();
            OriginAirport = new System.Collections.Generic.List<Flight>();
            Filters = new System.Collections.Generic.List<Filter>();
        }
    }

}
// </auto-generated>
